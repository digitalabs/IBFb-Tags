/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ibfb.inventory.update;

import javax.swing.JPanel;

public final class UpdateInventoryVisualPanel1 extends JPanel {

    /**
     * Creates new form UpdateInventoryVisualPanel1
     */
    public UpdateInventoryVisualPanel1() {
        initComponents();
    }

    @Override
    public String getName() {
        return "Step #1";
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        lblGermplasmList = new javax.swing.JLabel();
        cboGermplasmList = new javax.swing.JComboBox();
        jTextFieldLocation = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        lblStorageLocation = new javax.swing.JLabel();
        jComboBoxScale = new javax.swing.JComboBox();
        lblSampleUnits = new javax.swing.JLabel();
        chkKnownAmount = new javax.swing.JCheckBox();
        chkSameAmount = new javax.swing.JCheckBox();
        txtSameAmount = new javax.swing.JTextField();

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(UpdateInventoryVisualPanel1.class, "UpdateInventoryVisualPanel1.jLabel1.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(lblGermplasmList, org.openide.util.NbBundle.getMessage(UpdateInventoryVisualPanel1.class, "UpdateInventoryVisualPanel1.lblGermplasmList.text")); // NOI18N

        cboGermplasmList.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jTextFieldLocation.setEditable(false);
        jTextFieldLocation.setText(org.openide.util.NbBundle.getMessage(UpdateInventoryVisualPanel1.class, "UpdateInventoryVisualPanel1.jTextFieldLocation.text")); // NOI18N
        jTextFieldLocation.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldLocationKeyReleased(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jButton1, org.openide.util.NbBundle.getMessage(UpdateInventoryVisualPanel1.class, "UpdateInventoryVisualPanel1.jButton1.text")); // NOI18N
        jButton1.setToolTipText(org.openide.util.NbBundle.getMessage(UpdateInventoryVisualPanel1.class, "UpdateInventoryVisualPanel1.jButton1.toolTipText")); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(lblStorageLocation, org.openide.util.NbBundle.getMessage(UpdateInventoryVisualPanel1.class, "UpdateInventoryVisualPanel1.lblStorageLocation.text")); // NOI18N

        jComboBoxScale.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "g", "lbs", "seeds" }));
        jComboBoxScale.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxScaleItemStateChanged(evt);
            }
        });
        jComboBoxScale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxScaleActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(lblSampleUnits, org.openide.util.NbBundle.getMessage(UpdateInventoryVisualPanel1.class, "UpdateInventoryVisualPanel1.lblSampleUnits.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(chkKnownAmount, org.openide.util.NbBundle.getMessage(UpdateInventoryVisualPanel1.class, "UpdateInventoryVisualPanel1.chkKnownAmount.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(chkSameAmount, org.openide.util.NbBundle.getMessage(UpdateInventoryVisualPanel1.class, "UpdateInventoryVisualPanel1.chkSameAmount.text")); // NOI18N

        txtSameAmount.setText(org.openide.util.NbBundle.getMessage(UpdateInventoryVisualPanel1.class, "UpdateInventoryVisualPanel1.txtSameAmount.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblGermplasmList)
                    .addComponent(lblStorageLocation)
                    .addComponent(lblSampleUnits))
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cboGermplasmList, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jComboBoxScale, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTextFieldLocation))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(chkKnownAmount)
                        .addGap(0, 1, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(chkSameAmount)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtSameAmount)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblGermplasmList)
                    .addComponent(cboGermplasmList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldLocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1)
                    .addComponent(lblStorageLocation))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxScale, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSampleUnits))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(chkKnownAmount)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkSameAmount)
                    .addComponent(txtSameAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 162, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldLocationKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldLocationKeyReleased
        populateLocations();
    }

    private void populateAmount() {
//        if (!isNumericAmount()) {
//            DialogUtil.displayError(InventoryTopComponent.class, "InventoryTopComponent.numericAmountRequired");
//            return;
//        }
//
//        if (amountColumn < 0) {
//            return;
//        }
//
//        if (this.jCheckBoxSameAmount.isSelected()) {
//            String amount = this.jTextFieldAmount.getText();
//            for (int i = 0; i < this.jTableEntries.getRowCount(); i++) {
//                this.jTableEntries.setValueAt(amount, i, amountColumn);
//            }
//            ajustaColumn(jTableEntries, amountColumn, 2);
//        }
    }

    private void populateLocations() {
//        if (this.jCheckBoxSameLocation.isSelected()) {
//            String location = this.jTextFieldLocation.getText();
//
//            if (locationColumn < 0) {
//                return;
//            }
//
//
//
//            for (int i = 0; i < this.jTableEntries.getRowCount(); i++) {
//                this.jTableEntries.setValueAt(location, i, locationColumn);
//            }
//
//            ajustaColumn(jTableEntries, locationColumn, 2);
//
//        }
    }//GEN-LAST:event_jTextFieldLocationKeyReleased

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

//        SelectLocationPanel selectLocationPanel = new SelectLocationPanel(true);
//        String chooseLocation = bundle.getString("InventoryTopComponent.chooseLocation");
//        NotifyDescriptor notifyDescriptor = new NotifyDescriptor(selectLocationPanel, chooseLocation, NotifyDescriptor.OK_CANCEL_OPTION, NotifyDescriptor.PLAIN_MESSAGE, null, NotifyDescriptor.OK_OPTION);
//
//        if (DialogDisplayer.getDefault().notify(notifyDescriptor) == NotifyDescriptor.OK_OPTION) {
//            String value = selectLocationPanel.getLocationName();
//            this.jTextFieldLocation.setText(value);
//            this.locationId = selectLocationPanel.getLocationId();
//            populateLocations();
//        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jComboBoxScaleItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxScaleItemStateChanged
//        if (this.jCheckBoxSameScale.isSelected()) {
//
//            if (jComboBoxScale.getSelectedIndex() > 0) {
//                Scales scale = (Scales) jComboBoxScale.getSelectedItem();
//
//                if (scaleColumn < 0) {
//                    return;
//                }
//
//                for (int i = 0; i < this.jTableEntries.getRowCount(); i++) {
//                    this.jTableEntries.setValueAt(scale, i, scaleColumn);
//                }
//                ajustaColumn(jTableEntries, scaleColumn, 2);
//            }
//        }
    }//GEN-LAST:event_jComboBoxScaleItemStateChanged

    private void jComboBoxScaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxScaleActionPerformed

   }//GEN-LAST:event_jComboBoxScaleActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cboGermplasmList;
    private javax.swing.JCheckBox chkKnownAmount;
    private javax.swing.JCheckBox chkSameAmount;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox jComboBoxScale;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField jTextFieldLocation;
    private javax.swing.JLabel lblGermplasmList;
    private javax.swing.JLabel lblSampleUnits;
    private javax.swing.JLabel lblStorageLocation;
    private javax.swing.JTextField txtSameAmount;
    // End of variables declaration//GEN-END:variables
}
