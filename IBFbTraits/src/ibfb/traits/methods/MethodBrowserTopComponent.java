/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ibfb.traits.methods;

import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.List;
import java.util.ResourceBundle;
import org.cimmyt.cril.ibwb.api.AppServicesProxy;
import org.cimmyt.cril.ibwb.commongui.TableBindingUtil;
import org.cimmyt.cril.ibwb.domain.Tmethod;
import org.cimmyt.cril.ibwb.domain.TmsMethod;
import org.openide.util.NbBundle;
import org.openide.windows.TopComponent;
import org.openide.windows.WindowManager;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(dtd = "-//ibfb.traits.methods//MethodBrowser//EN",
autostore = false)
@TopComponent.Description(preferredID = "MethodBrowserTopComponent",
//iconBase="SET/PATH/TO/ICON/HERE", 
persistenceType = TopComponent.PERSISTENCE_NEVER)
@TopComponent.Registration(mode = "explorer", openAtStartup = false)
@ActionID(category = "Window", id = "ibfb.traits.methods.MethodBrowserTopComponent")
@ActionReference(path = "Menu/Window" /*, position = 333 */)
@TopComponent.OpenActionRegistration(displayName = "#CTL_MethodBrowserAction",
preferredID = "MethodBrowserTopComponent")
public final class MethodBrowserTopComponent extends TopComponent {
    
    private ResourceBundle bundle = NbBundle.getBundle(MethodBrowserTopComponent.class);
    

    private List<TmsMethod> methodLists;

    public MethodBrowserTopComponent() {
        initComponents();
        setName(NbBundle.getMessage(MethodBrowserTopComponent.class, "CTL_MethodBrowserTopComponent"));
        setToolTipText(NbBundle.getMessage(MethodBrowserTopComponent.class, "HINT_MethodBrowserTopComponent"));
        putClientProperty(TopComponent.PROP_UNDOCKING_DISABLED, Boolean.TRUE);        
        updateMethodsTable();
        tblMethods.addMouseListener(new MouseAdapter() {

            @Override
            public void mouseClicked(MouseEvent e) {
                if (e.getClickCount() == 2) {
                    editRecord();
                }
            }
        });
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pMnu = new javax.swing.JPopupMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        lblSearch = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        lblRecordsFound = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblMethods = new javax.swing.JTable();
        tblBarMenu = new javax.swing.JToolBar();
        btnNew = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnBrowse = new javax.swing.JButton();

        jMenuItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ibfb/traits/core/images/new.png"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jMenuItem1, org.openide.util.NbBundle.getMessage(MethodBrowserTopComponent.class, "MethodBrowserTopComponent.jMenuItem1.text")); // NOI18N
        jMenuItem1.setToolTipText(org.openide.util.NbBundle.getMessage(MethodBrowserTopComponent.class, "MethodBrowserTopComponent.jMenuItem1.toolTipText")); // NOI18N
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        pMnu.add(jMenuItem1);

        jMenuItem2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ibfb/traits/core/images/edit.png"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jMenuItem2, org.openide.util.NbBundle.getMessage(MethodBrowserTopComponent.class, "MethodBrowserTopComponent.jMenuItem2.text")); // NOI18N
        jMenuItem2.setToolTipText(org.openide.util.NbBundle.getMessage(MethodBrowserTopComponent.class, "MethodBrowserTopComponent.jMenuItem2.toolTipText")); // NOI18N
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        pMnu.add(jMenuItem2);

        jMenuItem3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ibfb/traits/core/images/delete.png"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jMenuItem3, org.openide.util.NbBundle.getMessage(MethodBrowserTopComponent.class, "MethodBrowserTopComponent.jMenuItem3.text")); // NOI18N
        jMenuItem3.setToolTipText(org.openide.util.NbBundle.getMessage(MethodBrowserTopComponent.class, "MethodBrowserTopComponent.jMenuItem3.toolTipText")); // NOI18N
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        pMnu.add(jMenuItem3);

        jMenuItem4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ibfb/traits/core/images/browse16.png"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jMenuItem4, org.openide.util.NbBundle.getMessage(MethodBrowserTopComponent.class, "MethodBrowserTopComponent.jMenuItem4.text")); // NOI18N
        jMenuItem4.setToolTipText(org.openide.util.NbBundle.getMessage(MethodBrowserTopComponent.class, "MethodBrowserTopComponent.jMenuItem4.toolTipText")); // NOI18N
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        pMnu.add(jMenuItem4);

        org.openide.awt.Mnemonics.setLocalizedText(lblSearch, org.openide.util.NbBundle.getMessage(MethodBrowserTopComponent.class, "MethodBrowserTopComponent.lblSearch.text")); // NOI18N

        txtSearch.setText(org.openide.util.NbBundle.getMessage(MethodBrowserTopComponent.class, "MethodBrowserTopComponent.txtSearch.text")); // NOI18N
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(lblRecordsFound, org.openide.util.NbBundle.getMessage(MethodBrowserTopComponent.class, "MethodBrowserTopComponent.lblRecordsFound.text")); // NOI18N

        tblMethods.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblMethods.setComponentPopupMenu(pMnu);
        jScrollPane1.setViewportView(tblMethods);

        tblBarMenu.setRollover(true);

        btnNew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ibfb/traits/core/images/new.png"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(btnNew, org.openide.util.NbBundle.getMessage(MethodBrowserTopComponent.class, "MethodBrowserTopComponent.btnNew.text")); // NOI18N
        btnNew.setToolTipText(org.openide.util.NbBundle.getMessage(MethodBrowserTopComponent.class, "MethodBrowserTopComponent.btnNew.toolTipText")); // NOI18N
        btnNew.setFocusable(false);
        btnNew.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnNew.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });
        tblBarMenu.add(btnNew);

        btnEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ibfb/traits/core/images/edit.png"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(btnEdit, org.openide.util.NbBundle.getMessage(MethodBrowserTopComponent.class, "MethodBrowserTopComponent.btnEdit.text")); // NOI18N
        btnEdit.setToolTipText(org.openide.util.NbBundle.getMessage(MethodBrowserTopComponent.class, "MethodBrowserTopComponent.btnEdit.toolTipText")); // NOI18N
        btnEdit.setFocusable(false);
        btnEdit.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnEdit.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });
        tblBarMenu.add(btnEdit);

        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ibfb/traits/core/images/delete.png"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(btnDelete, org.openide.util.NbBundle.getMessage(MethodBrowserTopComponent.class, "MethodBrowserTopComponent.btnDelete.text")); // NOI18N
        btnDelete.setToolTipText(org.openide.util.NbBundle.getMessage(MethodBrowserTopComponent.class, "MethodBrowserTopComponent.btnDelete.toolTipText")); // NOI18N
        btnDelete.setFocusable(false);
        btnDelete.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnDelete.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        tblBarMenu.add(btnDelete);

        btnBrowse.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ibfb/traits/core/images/browse16.png"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(btnBrowse, org.openide.util.NbBundle.getMessage(MethodBrowserTopComponent.class, "MethodBrowserTopComponent.btnBrowse.text")); // NOI18N
        btnBrowse.setToolTipText(org.openide.util.NbBundle.getMessage(MethodBrowserTopComponent.class, "MethodBrowserTopComponent.btnBrowse.toolTipText")); // NOI18N
        btnBrowse.setFocusable(false);
        btnBrowse.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnBrowse.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnBrowse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBrowseActionPerformed(evt);
            }
        });
        tblBarMenu.add(btnBrowse);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblSearch)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblRecordsFound)
                                    .addComponent(txtSearch, javax.swing.GroupLayout.DEFAULT_SIZE, 337, Short.MAX_VALUE)))))
                    .addComponent(tblBarMenu, javax.swing.GroupLayout.DEFAULT_SIZE, 390, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(tblBarMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSearch)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblRecordsFound)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 205, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        updateMethodsTable();
}//GEN-LAST:event_txtSearchKeyReleased

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        createNew();
}//GEN-LAST:event_btnNewActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        editRecord();
}//GEN-LAST:event_btnEditActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        deleteRecord();
}//GEN-LAST:event_btnDeleteActionPerformed

    private void btnBrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBrowseActionPerformed
        openOntology();
}//GEN-LAST:event_btnBrowseActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        createNew();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        editRecord();
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        deleteRecord();
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        openOntology();
    }//GEN-LAST:event_jMenuItem4ActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBrowse;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnNew;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblRecordsFound;
    private javax.swing.JLabel lblSearch;
    private javax.swing.JPopupMenu pMnu;
    private javax.swing.JToolBar tblBarMenu;
    private javax.swing.JTable tblMethods;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables

    @Override
    public void componentOpened() {
        // TODO add custom code on component opening
    }

    @Override
    public void componentClosed() {
        // TODO add custom code on component closing
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }

    public void updateMethodsTable() {

        TmsMethod filter = new TmsMethod(true);
        //filter.setTrname(txtSearchTrait.getText());
        filter.setGlobalsearch(txtSearch.getText());

        //int total = AppServicesProxy.getDefault().appServices().getTotalTrait(filter);
        methodLists = AppServicesProxy.getDefault().appServices().getListTmsMethod(filter, 0, 0, false);
        
        lblRecordsFound.setText(methodLists.size() + bundle.getString("MethodBrowserTopComponent.recordsfound"));
        
        String methodId = bundle.getString("MethodBrowserTopComponent.methodid");
        String methodName = bundle.getString("MethodBrowserTopComponent.methodname");
        String abbreviatue = bundle.getString("MethodBrowserTopComponent.abbreviature");
        String description = bundle.getString("MethodBrowserTopComponent.description");
        String headers = methodId + ","+  methodName + "," + abbreviatue + "," + description;
        
        TableBindingUtil.createColumnsFromDB(Tmethod.class, methodLists, tblMethods, "tmethid,tmname,tmabbr,tmdesc", headers);
    }

    private void createNew() {
        TmsMethod tmethod = new TmsMethod();
        MethodEditorTopComponent editorTopComponent = new MethodEditorTopComponent(tmethod);
        editorTopComponent.open();
        editorTopComponent.requestActive();
    }

    private void editRecord() {
        Integer row = tblMethods.getSelectedRow();
        if (row != -1) {
            TmsMethod tmethod = methodLists.get(row);
            MethodEditorTopComponent methodEditorTopComponent = MethodEditorTopComponent.getMethodEditorTopComponent(tmethod);
            if (methodEditorTopComponent == null) {
                methodEditorTopComponent = new MethodEditorTopComponent(tmethod);
            }
            methodEditorTopComponent.open();
            methodEditorTopComponent.requestActive();
        }
    }

    private void deleteRecord() {
        Integer row = tblMethods.getSelectedRow();
        if (row != -1) {
        }
    }

    private void openOntology() {
    }
}
